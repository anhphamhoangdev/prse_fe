import React, { useState } from 'react';
import { SearchHeaderAndFooterLayout } from '../../layouts/UserLayout';
import {CourseSidebar} from "../../components/course/course-detail/CourseSidebar";
import {CourseContent} from "../../components/course/course-detail/CourseContent";
import {CourseHero} from "../../components/course/course-detail/CourseHero";
import {CourseOverview} from "../../components/course/course-detail/CourseOverview";
import {CourseDetailData} from "../../types/course";


const handleAddToCart = () => {
    // X·ª≠ l√Ω th√™m v√†o gi·ªè h√†ng
    console.log('Adding to cart...');
};

const handleBuyNow = () => {
    // X·ª≠ l√Ω mua ngay
    console.log('Processing purchase...');
};

const handleStartLearning = () => {
    // C√≥ th·ªÉ chuy·ªÉn h∆∞·ªõng ng∆∞·ªùi d√πng ƒë·∫øn trang h·ªçc
    console.log('Starting course...');
    // router.push(`/learn/${courseData.id}`);
};

const handleSubmitFeedback = (rating: number, comment: string) => {
    console.log('Submitting feedback:', { rating, comment });
    // Implement API call to submit feedback
};

const CourseDetail: React.FC = () => {
    const courseData: CourseDetailData = {
        "id": 1,
        "title": "Hu·ª∑ di·ªát Java Spring Boot",
        "description": "L√†m quen v·ªõi l·∫≠p tr√¨nh Back-end b·∫±ng Spring Boot t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao. X√¢y d·ª±ng RESTful API, x·ª≠ l√Ω b·∫•t ƒë·ªìng b·ªô, t·ªëi ∆∞u hi·ªáu su·∫•t v√† tri·ªÉn khai ·ª©ng d·ª•ng th·ª±c t·∫ø.",
        "totalStudents": 1500,
        "totalViews": 5000,
        "language": "Ti·∫øng Vi·ªát",
        "averageRating": 4.8,
        "originalPrice": 300000,
        "discountPrice": 300000,
        "imageUrl": "https://files.fullstack.edu.vn/f8-prod/courses/7.png",
        "totalDuration": "45 gi·ªù",
        "lastUpdated": "Th√°ng 3 2024",
        "previewVideoUrl": "https://storage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
        "previewVideoDuration": 596,
        "isEnrolled": false,

        "instructor": {
            "id": 1,
            "fullName": "John Doe",
            "avatarUrl": "https://scontent.fsgn19-1.fna.fbcdn.net/v/t39.30808-1/416238737_2395657973950734_3403316050107008880_n.jpg",
            "title": "Senior Java Developer & Instructor",
            "totalCourses": 8,
            "totalStudents": 35000
        },

        "chapters": [
            {
                "id": 1,
                "title": "Gi·ªõi thi·ªáu Spring Boot",
                "lessons": [
                    {
                        "id": 1,
                        "title": "T·ªïng quan v·ªÅ Spring Boot",
                        "type": "video",
                        "duration": "15:00"
                    },
                    {
                        "id": 2,
                        "title": "C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng ph√°t tri·ªÉn",
                        "type": "text"
                    },
                    {
                        "id": 3,
                        "title": "Ki·ªÉm tra ki·∫øn th·ª©c Spring Boot c∆° b·∫£n",
                        "type": "quiz"
                    }
                ]
            },
            {
                "id": 2,
                "title": "RESTful API v·ªõi Spring Boot",
                "lessons": [
                    {
                        "id": 4,
                        "title": "REST Controller v√† Request Mapping",
                        "type": "video",
                        "duration": "20:00"
                    },
                    {
                        "id": 5,
                        "title": "X·ª≠ l√Ω Request v√† Response",
                        "type": "code"
                    },
                    {
                        "id": 6,
                        "title": "Validation v√† Exception Handling",
                        "type": "text"
                    }
                ]
            }
        ],

        "learningPoints": [
            {
                "id": 1,
                "content": "X√¢y d·ª±ng ·ª©ng d·ª•ng web v·ªõi Spring Boot t·ª´ A-Z"
            },
            {
                "id": 2,
                "content": "Thi·∫øt k·∫ø v√† ph√°t tri·ªÉn RESTful API chu·∫©n"
            },
            {
                "id": 3,
                "content": "L√†m vi·ªác v·ªõi c∆° s·ªü d·ªØ li·ªáu s·ª≠ d·ª•ng Spring Data JPA"
            },
            {
                "id": 4,
                "content": "X·ª≠ l√Ω b·∫•t ƒë·ªìng b·ªô v√† t·ªëi ∆∞u hi·ªáu su·∫•t"
            },
            {
                "id": 5,
                "content": "B·∫£o m·∫≠t ·ª©ng d·ª•ng v·ªõi Spring Security"
            },
            {
                "id": 6,
                "content": "Tri·ªÉn khai ·ª©ng d·ª•ng l√™n m√¥i tr∆∞·ªùng production"
            }
        ],

        "prerequisites": [
            {
                "id": 1,
                "content": "Ki·∫øn th·ª©c c∆° b·∫£n v·ªÅ Java"
            },
            {
                "id": 2,
                "content": "Hi·ªÉu bi·∫øt v·ªÅ l·∫≠p tr√¨nh h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng (OOP)"
            },
            {
                "id": 3,
                "content": "C∆° b·∫£n v·ªÅ HTML, SQL v√† RESTful API"
            },
        ],

        "feedbacks": [
            {
                "id": 1,
                "studentId": 1,
                "studentName": "Anh Long",
                "studentAvatarUrl": "https://scontent.fsgn19-1.fna.fbcdn.net/v/t39.30808-6/433129123_385482517594012_376337141649238004_n.jpg?_nc_cat=101&ccb=1-7&_nc_sid=6ee11a&_nc_ohc=C5wAqfqjZGIQ7kNvgHpVV8R&_nc_zt=23&_nc_ht=scontent.fsgn19-1.fna&_nc_gid=A0sW7sTsX-ZrRlCLmZ2z5ev&oh=00_AYA2G5foZuP4NOjkL-QWPelwBF9dtVp-1JVKr-EREyXe0A&oe=673C97D7",
                "rating": 5,
                "comment": "H·ªçc Spring Boot xong, gi·ªù t√¥i l√† b·∫≠c th·∫ßy c·ªßa @Autowired! Dependency Injection gi·ªù ƒë√¢y ch·ªâ l√† chuy·ªán nh·ªè nh∆∞ con th·ªè. Bean c·ªßa t√¥i m·ªçc l√™n t∆∞∆°i t·ªët nh∆∞ rau trong v∆∞·ªùn! üå±",
                "createdAt": "2024-03-15T10:00:00Z"
            },
            {
                "id": 2,
                "studentId": 2,
                "studentName": "Em Long Huy",
                "studentAvatarUrl": "https://scontent.fsgn19-1.fna.fbcdn.net/v/t39.30808-6/456583606_1226900268512711_5713235832187306782_n.jpg?_nc_cat=106&ccb=1-7&_nc_sid=6ee11a&_nc_ohc=tzxXAdK8Mk8Q7kNvgGLAMZz&_nc_zt=23&_nc_ht=scontent.fsgn19-1.fna&_nc_gid=AuezSaY9cLuF4IIi3Pzcey-&oh=00_AYDZzsyXDZILyK-BaDtP0f94huSNCi-zZnevmayTopg3Og&oe=673C8733",
                "rating": 4,
                "comment": "Ban ƒë·∫ßu t∆∞·ªüng Spring Boot kh√≥ nh∆∞ leo n√∫i Everest, ai ng·ªù gi·∫£ng vi√™n gi·∫£i th√≠ch d·ªÖ hi·ªÉu ƒë·∫øn m·ª©c t√¥i c√≤n code ƒë∆∞·ª£c trong l√∫c... ƒÉn ph·ªü! Gi·ªù REST API v·ªõi t√¥i ƒë∆°n gi·∫£n nh∆∞ tr·ªü b√†n tay üçú",
                "createdAt": "2024-03-10T15:30:00Z"
            },
            {
                "id": 3,
                "studentId": 3,
                "studentName": "Em Long Linh",
                "studentAvatarUrl": "https://scontent.fsgn19-1.fna.fbcdn.net/v/t39.30808-1/434639741_2040379269666782_6839187750192260565_n.jpg?stp=dst-jpg_s480x480&_nc_cat=110&ccb=1-7&_nc_sid=0ecb9b&_nc_ohc=wCZCv4xKCRsQ7kNvgH0x2f_&_nc_zt=24&_nc_ht=scontent.fsgn19-1.fna&_nc_gid=ARz2Oi5wMPMR1u_1Utw63MB&oh=00_AYDF4QY4dwkUNrPYRc2jXEYvUHQaKqhXH_bQq6ka3f04pQ&oe=673C8507",
                "rating": 5,
                "comment": "Sau kh√≥a h·ªçc n√†y, t√¥i ƒë√£ bi·∫øt c√°ch l√†m cho ·ª©ng d·ª•ng 'nh·∫£y m√∫a' theo √Ω m√¨nh! Spring Security gi·ªù kh√¥ng c√≤n l√† c∆°n √°c m·ªông n·ªØa, exception handling ƒë√£ tr·ªü th√†nh ng∆∞·ªùi b·∫°n th√¢n thi·∫øt. C√≥ th·ªÉ n√≥i t√¥i ƒë√£ t·ª´ 'g√† m·ªù' th√†nh 'ƒë·∫°i b√†ng' Java! ü¶Ö",
                "createdAt": "2024-03-10T15:30:00Z"
            }
        ],
        subcategories: [
            {
                "id": 1,
                "subcategoryName": "Java Spring Boot"
            },
            {
                "id": 2,
                "subcategoryName": "Back-end Development"
            },
            {
                "id": 1,
                "subcategoryName": "Java Spring Boot"
            }
        ]
    };

    const [expandedChapters, setExpandedChapters] = useState<Record<number, boolean>>({});
    const [activeTab, setActiveTab] = useState<'overview' | 'content'>('overview');

    const TabButton: React.FC<{
        tab: 'overview' | 'content';
        label: string;
        onClick: () => void;
        isActive: boolean;
    }> = ({ tab, label, onClick, isActive }) => (
        <button
            className={`pb-4 px-2 ${isActive ? 'border-b-2 border-blue-600 text-blue-600' : 'text-gray-600'}`}
            onClick={onClick}
        >
            {label}
        </button>
    );

    return (
        <SearchHeaderAndFooterLayout>
            <CourseHero
                courseData={courseData}
                onAddToCart={handleAddToCart}
                onBuyNow={handleBuyNow}
                onStartLearning={handleStartLearning}
            />
            <div className="container mx-auto px-4 py-8">
                <div className="flex space-x-8">
                    <div className="w-2/3">
                        {/* Tabs */}
                        <div className="border-b border-gray-200 mb-6">
                            <div className="flex space-x-8">
                                <TabButton
                                    tab="overview"
                                    label="Overview"
                                    onClick={() => setActiveTab('overview')}
                                    isActive={activeTab === 'overview'}
                                />
                                <TabButton
                                    tab="content"
                                    label="Course Content"
                                    onClick={() => setActiveTab('content')}
                                    isActive={activeTab === 'content'}
                                />
                            </div>
                        </div>

                        {/* Tab Content */}
                        {activeTab === 'overview' ? (
                            <CourseOverview
                                courseData={courseData}
                                onSubmitFeedback={handleSubmitFeedback}
                            />                        ) : (
                            <CourseContent
                                chapters={courseData.chapters}
                                expandedChapters={expandedChapters}
                                setExpandedChapters={setExpandedChapters}
                            />
                        )}
                    </div>

                    <div className="w-1/3">
                        <CourseSidebar
                            courseData={courseData}
                            onAddToCart={handleAddToCart}
                            onBuyNow={handleBuyNow}
                            onStartLearning={handleStartLearning}
                        />
                    </div>
                </div>
            </div>
        </SearchHeaderAndFooterLayout>
    );
};

export default CourseDetail;